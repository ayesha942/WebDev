{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern-blog-master (1)\\\\mern-blog-master\\\\client\\\\src\\\\pages\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport Editor from \"../Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:4000/post/' + id).then(response => {\n      response.json().then(postInfo => {\n        setTitle(postInfo.title);\n        setContent(postInfo.content);\n        setSummary(postInfo.summary);\n      });\n    });\n  }, []);\n  async function updatePost(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('id', id);\n    if (files !== null && files !== void 0 && files[0]) {\n      data.set('file', files === null || files === void 0 ? void 0 : files[0]);\n    }\n    const response = await fetch('http://localhost:4000/post', {\n      method: 'PUT',\n      body: data,\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/post/' + id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: updatePost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"title\",\n      placeholder: 'Title',\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"summary\",\n      placeholder: 'Summary',\n      value: summary,\n      onChange: ev => setSummary(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onChange: setContent,\n      value: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"Update post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPost, \"XUvSy4S2d8+TJzaO+IiYGiiAP9w=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useEffect","useState","Navigate","useParams","Editor","EditPost","id","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","fetch","then","response","json","postInfo","updatePost","ev","preventDefault","data","FormData","set","method","body","credentials","ok","target","value","marginTop"],"sources":["D:/mern-blog-master (1)/mern-blog-master/client/src/pages/EditPost.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport {Navigate, useParams} from \"react-router-dom\";\nimport Editor from \"../Editor\";\n\nexport default function EditPost() {\n  const {id} = useParams();\n  const [title,setTitle] = useState('');\n  const [summary,setSummary] = useState('');\n  const [content,setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect,setRedirect] = useState(false);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/post/'+id)\n      .then(response => {\n        response.json().then(postInfo => {\n          setTitle(postInfo.title);\n          setContent(postInfo.content);\n          setSummary(postInfo.summary);\n        });\n      });\n  }, []);\n\n  async function updatePost(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('id', id);\n    if (files?.[0]) {\n      data.set('file', files?.[0]);\n    }\n    const response = await fetch('http://localhost:4000/post', {\n      method: 'PUT',\n      body: data,\n      credentials: 'include',\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n\n  if (redirect) {\n    return <Navigate to={'/post/'+id} />\n  }\n\n  return (\n    <form onSubmit={updatePost}>\n      <input type=\"title\"\n             placeholder={'Title'}\n             value={title}\n             onChange={ev => setTitle(ev.target.value)} />\n      <input type=\"summary\"\n             placeholder={'Summary'}\n             value={summary}\n             onChange={ev => setSummary(ev.target.value)} />\n      <input type=\"file\"\n             onChange={ev => setFiles(ev.target.files)} />\n      <Editor onChange={setContent} value={content} />\n      <button style={{marginTop:'5px'}}>Update post</button>\n    </form>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}